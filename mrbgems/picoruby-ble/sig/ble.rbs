class BLE
  CYW43_WL_GPIO_LED_PIN: Integer

  GATT_PRIMARY_SERVICE_UUID: Integer
  GAP_SERVICE_UUID: Integer
  GAP_DEVICE_NAME_UUID: Integer
  ATT_PROPERTY_READ: Integer
  GATT_CHARACTERISTIC_UUID: Integer

  def self.bd_addr_to_str: (String) -> String

  class Utils
    def self.uuid: (untyped) -> String
    def self.int16_to_little_endian: (Integer) -> String
    def self.valid_char_for_uuid?: (String | nil) -> bool
  end

  class GattDatabase
    type uuid_t = String|Integer
    @handle: Integer
    attr_reader data: String

    def self.build: () { (GattDatabase) -> void } -> String
    def handle: () -> Integer
    def next_handle: () -> Integer
    def add_line: (String) -> void
    def add_service: (uuid_t) ?{ (GattDatabase) -> void } -> void
    def add_characteristic: (uuid_t, Integer, Integer, *(String|Integer)) ?{ (GattDatabase) -> void } -> void
    def add_descriptor: (uuid_t, Integer, Integer, String) -> void
    def uuid2str: (uuid_t) -> String
  end

  class AttServer
    @task: Task
    @connections: Array[BLE::AttServer]
    def initialize: () -> void
    def init: () -> void
    def start: () -> 0
    def hci_power_on: () -> void
    def stop: () -> 0
    def down_packet_flag: () -> void
    def packet_event: () -> (Integer | nil)

    def gap_local_bd_addr: () -> String
    def advertise: (String) -> void
    def enable_le_notification: () -> void
    def notify: () -> void

    def packet_callback: (Integer) -> void
    def heatbeat_callback: () -> void

    def heartbeat_on?: () -> void
    def heartbeat_off: () -> void
    def le_notification_enabled?: () -> bool
    def request_can_send_now_event: () -> void
    def cyw43_arch_gpio_put: (Integer, bool|nil) -> void
  end

  class AdvertisingData
    attr_reader data: String
    def add: (Integer, *untyped) -> void
    def self.build: () { (AdvertisingData) -> void } -> String
  end
end

class MyServer < BLE::AttServer
  APP_AD_FLAGS: Integer
  BLUETOOTH_DATA_TYPE_FLAGS: Integer
  BLUETOOTH_DATA_TYPE_COMPLETE_LIST_OF_16_BIT_SERVICE_CLASS_UUIDS: Integer
  BLUETOOTH_DATA_TYPE_COMPLETE_LOCAL_NAME: Integer
  BTSTACK_EVENT_STATE: Integer
  HCI_EVENT_CONNECTION_COMPLETE: Integer
  HCI_EVENT_DISCONNECTION_COMPLETE: Integer
  ATT_EVENT_CAN_SEND_NOW: Integer
  ATT_EVENT_MTU_EXCHANGE_COMPLETE: Integer
  CYW43_WL_GPIO_LED_PIN: Integer
  @last_event: Integer
  @counter: Integer
  @led_on: bool
  @adv_data: String
  def poll_temp: () -> void
end
