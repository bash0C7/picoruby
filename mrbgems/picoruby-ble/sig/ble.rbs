class BLE

  HCI_STATE_OFF: Integer
  HCI_STATE_INITIALIZING: Integer
  HCI_STATE_WORKING: Integer
  HCI_STATE_HALTING: Integer
  HCI_STATE_SLEEPING: Integer
  HCI_STATE_FALLING_ASLEEP: Integer

  CLIENT_CHARACTERISTIC_CONFIGURATION: Integer
  CHARACTERISTIC_DATABASE_HASH: Integer

  BROADCAST:                   Integer
  READ:                        Integer
  WRITE_WITHOUT_RESPONSE:      Integer
  WRITE:                       Integer
  NOTIFY:                      Integer
  INDICATE:                    Integer
  AUTHENTICATED_SIGNED_WRITE:  Integer
  EXTENDED_PROPERTIES:         Integer
  DYNAMIC:                     Integer
  LONG_UUID:                   Integer
  READ_PERMISSION_BIT_0:       Integer
  READ_PERMISSION_BIT_1:       Integer
  ENCRYPTION_KEY_SIZE_7:       Integer
  ENCRYPTION_KEY_SIZE_8:       Integer
  ENCRYPTION_KEY_SIZE_9:       Integer
  ENCRYPTION_KEY_SIZE_10:      Integer
  ENCRYPTION_KEY_SIZE_11:      Integer
  ENCRYPTION_KEY_SIZE_12:      Integer
  ENCRYPTION_KEY_SIZE_13:      Integer
  ENCRYPTION_KEY_SIZE_14:      Integer
  ENCRYPTION_KEY_SIZE_15:      Integer
  ENCRYPTION_KEY_SIZE_16:      Integer
  ENCRYPTION_KEY_SIZE_MASK:    Integer
  RELIABLE_WRITE:              Integer
  AUTHENTICATION_REQUIRED:     Integer
  AUTHORIZATION_REQUIRED:      Integer
  READ_ANYBODY:                Integer
  READ_ENCRYPTED:              Integer
  READ_AUTHENTICATED:          Integer
  READ_AUTHENTICATED_SC:       Integer
  READ_AUTHORIZED:             Integer
  WRITE_ANYBODY:               Integer
  WRITE_ENCRYPTED:             Integer
  WRITE_AUTHENTICATED:         Integer
  WRITE_AUTHENTICATED_SC:      Integer
  WRITE_AUTHORIZED:            Integer
  WRITE_PERMISSION_BIT_0:      Integer
  WRITE_PERMISSION_BIT_1:      Integer
  READ_PERMISSION_SC:          Integer
  WRITE_PERMISSION_SC:         Integer
  CYW43_WL_GPIO_LED_PIN: Integer

  GATT_PRIMARY_SERVICE_UUID: Integer
  GATT_SECONDARY_SERVICE_UUID: Integer
  GAP_SERVICE_UUID: Integer
  GATT_SERVICE_UUID: Integer
  GAP_DEVICE_NAME_UUID: Integer
  ATT_PROPERTY_READ: Integer
  GATT_CHARACTERISTIC_UUID: Integer

  @debug: bool
  @_write_values: Hash[Integer, String]
  @_read_values: Hash[Integer, String]
  @_event_packets: event_packet_t

  type event_packet_t = Array[String]

  def hci_power_on: () -> void
  def start: () -> 0
  def mutex_trylock: () -> bool
  def mutex_unlock: () -> 0
  def packet_callback: (String) -> void
  def heartbeat_callback: () -> void
  def gap_local_bd_addr: () -> String
  def get_write_value: (Integer) -> (String|nil)
  def set_read_value: (Integer, String) -> void

  class Utils
    def self.bd_addr_to_str: (String) -> String
    def self.uuid: (untyped) -> String
    def self.int16_to_little_endian: (Integer) -> String
    def self.valid_char_for_uuid?: (String | nil) -> bool
  end

  class AdvertisingReport
    type report_t = {type: Integer, value: String}
    EVENT_TYPE: Hash[Integer, Symbol]
    ADDRESS_TYPE: Array[Symbol]
    attr_reader event_type: Integer
    attr_reader address_type: Integer
    attr_reader address: String
    attr_reader rssi: Integer | nil
    attr_reader reports: Array[report_t]
    def initialize: (String) -> void
    def inspect_reports: (String) -> Array[report_t]
  end

  class GattDatabase
    ATT_DB_VERSION: Integer

    type uuid_t = String|Integer
    @current_handle: Integer
    @hash_src: String
    @hash_pos: Integer|nil
    attr_reader handle_table: {
      service: Hash[uuid_t, Integer],
      characteristic: {
        value: Hash[uuid_t, Integer],
        client_configuration: Hash[uuid_t, Integer],
      }
    }
    attr_reader profile_data: String
    attr_accessor database_hash_key: String

    def initialize: () { (GattDatabase) -> void } -> void
    def insert_database_hash: () -> void
    def push_handle: () -> Integer
    def add_line: (String) -> void
    def add_service: (Integer, uuid_t) ?{ (GattDatabase) -> void } -> void
    def add_characteristic: (uuid_t, Integer, *(String|Integer)) ?{ (GattDatabase) -> void } -> void
    def add_descriptor: (uuid_t, Integer, *(String|Integer)) -> void
    def uuid2str: (uuid_t) -> String
    def att_flags: (Integer) -> Integer
    def write_permissions_and_key_size_flags_from_properties: (Integer) -> Integer
  end

  class Peripheral < BLE
    def initialize: (String, ?bool) -> void
    def _init: (String) -> void

    def advertise: (String) -> void
    def notify: (Integer) -> void

    def request_can_send_now_event: () -> void
  end

  class Central < BLE
    def initialize: (?bool) -> void
    def _init: () -> void
    def start_scan: () -> 0

    def get_packet: () -> String
  end

  class AdvertisingData
    attr_reader data: String
    def add: (Integer, *untyped) -> void
    def self.build: () { (AdvertisingData) -> void } -> String
  end
end

