# TypeProf 0.21.3

# Classes
class FAT

  type stat_t = {size: Integer?, unixtime: Integer?, mode: Integer}
  type driver_t = nil|SPI

  class Stat
    LABEL: String
    @mtime: Time
    @stat_hash: stat_t
    def initialize: (String device, String path) -> void
    def mode: () -> Integer
    def mode_str: () -> String
    def writable?: () -> bool
    def mtime: () -> Time
    def birthtime: () -> untyped
    def size: () -> Integer
  end

  AM_RDO: 1
  AM_HID: 2
  AM_SYS: 4
  AM_DIR: 16
  AM_ARC: 32

  def self._directory?: (String path) -> bool
  def self._exist?: (String path) -> bool
  def self._unlink: (String path) -> 0
  def self._chdir: (String path) -> 0
  def self._utime: (Integer unixtime, String path) -> Integer
  def self._mkdir: (String path, Integer mode) -> 0
  def self._erase: (String path) -> 0
  def self._chmod: (Integer mode, String path) -> 0
  def self._stat: (String path) -> stat_t

  def self.init_spi: (String unit, Integer sck_pin, Integer cipo_pin, Integer copi_pin, Integer cs_pin) -> 0
  def getfree: (String path) -> Integer

  def _mkfs: (String path) -> self
  def _setlabel: (String) -> 0
  def _getlabel: (String) -> String
  def _mount: (String path) -> 0
  def _unmount: (String path) -> 0

  @fatfs: nil | 0
  @label: String | nil

  def initialize: (Symbol|String device, ?label: String?, ?driver: driver_t) -> void

  attr_reader mountpoint: String
  attr_reader prefix: String

  def mkfs: -> FAT
  def setlabel: -> 0
  def getlabel: -> String
  def sector_count: -> {total: Integer, free: Integer}
  def mount: (String mountpoint) -> 0
  def unmount: -> nil
  def open_dir: (String path) -> FAT::Dir
  def open_file: (String path, String mode) -> FAT::File
  def chdir: (String path) -> 0
  def erase: -> 0
  def utime: (Time atime, Time mtime, String path) -> Integer
  def mkdir: (String path, ?Integer mode) -> 0
  def chmod: (Integer mode, String path) -> 0
  def stat: (String path) -> Stat
  def exist?: (String path) -> bool
  def unlink: (String path) -> 0
  def directory?: (String path) -> bool

  class Dir
    attr_accessor pat: String

    def initialize: (String path) -> void
    def rewind: -> self
    def read: -> String?
    def findnext: -> String?
    def close: -> nil
    def fullpath: -> String
  end

  class File
    def initialize: (String path, String mode) -> void
    def tell: -> Integer
    def seek: (Integer offset) -> 0
    def eof?: -> bool
    def read: (Integer size) -> String
    def write: (String data) -> Integer
    def close: -> nil
    def size: -> Integer
    def expand: -> Integer
    def fsync: -> 0
  end
end
